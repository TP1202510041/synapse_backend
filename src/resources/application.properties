# ===============================
# APPLICATION NAME
# ===============================
spring.application.name=Synapse

# ===============================
# DATABASE CONFIGURATION - MySQL
# ===============================
# Usa variables de entorno para credenciales (Digital Ocean las inyectará)
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:synapse}?sslMode=REQUIRED&serverTimezone=UTC
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:root}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# JPA / HIBERNATE CONFIGURATION
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# ===============================
# SWAGGER/OPENAPI CONFIGURATION
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# ===============================
# SERVER CONFIGURATION
# ===============================
# Digital Ocean App Platform usa la variable PORT
server.port=${PORT:5000}

# ===============================
# LOGGING CONFIGURATION
# ===============================
# En producción, reduce el logging
logging.level.org.springframework.security=${LOG_LEVEL:INFO}
logging.level.com.proyecto.synapsevr=${LOG_LEVEL:INFO}
